import jp.classmethod.aws.gradle.s3.SyncTask

plugins {
  id "com.moowork.node" version "1.2.0"
  id "jp.classmethod.aws.s3" version "0.35"
  id 'org.ajoberstar.git-publish' version '0.3.2'
}

gitPublish {
  // where to publish to (repo must exist)
  repoUri = 'https://github.com/lambdalab/docs'
  // (or 'https://github.com/ajoberstar/test-repo.git', depending on authentication)

  // branch will be created if it doesn't exist
  branch = 'master'

  // generally, you don't need to touch this
  repoDir = file("$buildDir") // defaults to $buildDir/gitPublish

  // what to publish, this is a standard CopySpec
  contents {
    from '.'
  }

  // what to keep in the existing branch (include=keep)
  preserve {
    include '**'
    exclude 'build/**', "build.gradle"
  }

  // message used when committing changes
  commitMessage = 'Publishing a new page' // defaults to 'Generated by gradle-git-publish'
}

node {
  version = rootProject.nodeVersion
  download = true
  workDir = file("${rootProject.buildDir}/nodejs")
}

task clean(type: Delete) {
  delete "build", "node_modules"
}

task gitbookInstall(type: NpmTask, dependsOn: [npmInstall]) {
  args = ['run', "gitbook", "install", "."]
}

task build(type: NpmTask, dependsOn: [gitbookInstall]) {
  args = ['run', "gitbook", "build", ".", "$buildDir"]
}

task serve(type: NpmTask, dependsOn: [gitbookInstall]) {
  args = ['run', "gitbook", "serve", ".", "$buildDir", "--", "--port=4000", "--lrport=35730"]
}

task deployForVersion(type: SyncTask, dependsOn: build) {
  bucketName "docs.insight.io/$version"
  source file("$buildDir")
}

task deploy(type: SyncTask, dependsOn: build) {
  bucketName 'docs.insight.io'
  source file("$buildDir")
}

// TODO publish to gitbooks using https://github.com/ajoberstar/gradle-git-publish